{"version":3,"sources":["app/service/ProductService.js","app/assign-prototype/HighLightedSpan.tsx","app/assign-prototype/SearchInput.tsx","app/assign-prototype/UsersList.tsx","app/assign-prototype/AssignItem.tsx","app/assign-prototype/CenteredTree.tsx","app/service/NodeService.tsx","app/assign-prototype/AssigneeList2.tsx","app/assign-prototype/AssigneeList.tsx","app/assign-prototype/AssignPrototypePage.tsx","app/assign-prototype/RolesTree.tsx","app/assign-prototype/AssignPrototypePage2.tsx","app/assign-prototype/AssignmentsOrgChart.tsx","app/assign-prototype/AssigneeList3.tsx","app/assign-prototype/AssignPrototypePage3.tsx","app/assign-prototype/UsersList4.tsx","app/assign-prototype/AssigneeList4.tsx","app/assign-prototype/AssignPrototypePage4.tsx","App.tsx","app/store.ts","serviceWorker.ts","index.tsx","app/assign-prototype/UsersList.module.css","app/assign-prototype/AssigneeList.module.css"],"names":["ProductService","fetch","then","res","json","d","data","highlightText","textToHighlight","highlight","highlightClassName","isEmpty","toLowerCase","replace","HighLightedSpan","value","dangerouslySetInnerHTML","__html","SearchInput","search","setSearch","label","className","styles","dataTableHeader","type","onChange","e","target","placeholder","UsersList","selectedClients","setSelectedClients","useState","clients","setClients","productService","globalFilter","setGlobalFilter","useEffect","getClients","dt","useRef","header","style","display","justifyContent","options","renderer","props","text","field","useMemo","filter","client","some","scrollable","scrollHeight","ref","selection","onSelectionChange","stripedRows","dataKey","frozenValue","emptyMessage","frozen","selectionMode","headerStyle","width","sortable","body","AssignItem","userName","assignments","collapsed","setCollapsed","legend","toggleable","onToggle","flexFlow","alignItems","map","name","debugData","children","containerStyles","height","svgSquare","shape","shapeProps","x","y","CenteredTree","treeContainerRef","translate","setTranslate","dimensions","current","getBoundingClientRect","orientation","nodeSvgShape","circleRadius","NodeService","root","AssigneeList2","isDataTree","setIsDataTree","setHasSelection","nodes","setNodes","selectedKeys3","setSelectedKeys3","toast","getTreeNodes","console","log","checked","showHeader","container","selectionKeys","onSelect","node","show","severity","summary","detail","life","onUnselect","AssigneeList","selectedNodeKeys3","setSelectedNodeKeys3","nodeService","event","resizableColumns","columnResizeMode","expander","existedItems","userId","id","AssignPrototypePage","selectedAssignee","setSelectedAssignee","existedGroup","setExistedGroup","newGroup","setNewGroup","size","minSize","c","item","RolesTree","roles","selectedRolesKeys","setSelectedRolesKeys","AssignPrototypePage2","setRoles","getRolesTree","flexDirection","AssignmentsOrgChart","maxWidth","nodeTemplate","AssigneeList3","list","selectedAssignees","setSelectedAssignees","data1","expanded","data2","data3","AssignPrototypePage3","selectedUsers","setSelectedUsers","assigneeList","setAssigneeList","orgChartData","user","selectedUser","setSelectedUser","optionLabel","showClear","filterBy","businessEntitiesItems","clientsList","engagementsList","projectsList","AssigneeList4","selectedType","setSelectedType","selectedObjects","setSelectedObjects","minHeight","AssignPrototypePage4","UsersList4","items","home","icon","url","App","breadcrumbs","model","left","path","exact","to","store","configureStore","reducer","counter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.e63a63e9.chunk.js","sourcesContent":["export default class ProductService {\n\n  getClients() {\n    return fetch('data/clients.json').then(res => res.json()).then(d => d.data);\n  }\n\n  getProductsSmall() {\n    return fetch('data/products-small.json').then(res => res.json()).then(d => d.data);\n  }\n\n  getProducts() {\n    return fetch('data/products.json').then(res => res.json()).then(d => d.data);\n  }\n\n  getProductsWithOrdersSmall() {\n    return fetch('data/products-orders-small.json').then(res => res.json()).then(d => d.data);\n  }\n}","import * as React from 'react';\nimport isEmpty from 'lodash/isEmpty';\n\ninterface InnerHTMLProps {\n  value: string;\n  defaultValue?: string;\n  className?: string;\n  highlight?: string;\n  highlightClassName?: string\n}\n\nexport const highlightText = (textToHighlight: string, highlight: string, highlightClassName: string) => {\n  if (isEmpty(highlight)) {\n    return textToHighlight;\n  }\n  if (isEmpty(textToHighlight)) {\n    return '';\n  }\n  return textToHighlight.toLowerCase().replace(highlight.toLowerCase(), `<span class=\"${highlightClassName}\">${highlight}</span>`)\n}\nconst HighLightedSpan: React.FunctionComponent<InnerHTMLProps> =\n  (\n    {\n      value,\n      highlight = \"\",\n      highlightClassName = \"highlight\"\n    }: InnerHTMLProps\n  ) =>\n    !isEmpty(value) ? (\n      <span\n        dangerouslySetInnerHTML={{\n          __html: highlightText(value, highlight, highlightClassName)\n        }}\n      />\n    ) : null;\n\nexport default HighLightedSpan;","import styles from \"./UsersList.module.css\";\nimport {InputText} from \"primereact/inputtext\";\nimport React from \"react\";\n\ninterface SearchInputProps {\n  search: string,\n  setSearch: (newValue: string) => void,\n  label?: string\n}\n\nexport const SearchInput: React.FC<SearchInputProps> = ({search, setSearch, label}) =>\n  <div className={styles.dataTableHeader}>\n      <span className=\"p-input-icon-left\">\n        <i className=\"pi pi-search\"/>\n        <InputText\n          type=\"search\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          placeholder={label}\n        />\n      </span>\n  </div>;","import React, {useEffect, useMemo, useRef, useState} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column, ColumnProps} from 'primereact/column';\nimport ProductService from '../service/ProductService';\nimport styles from './UsersList.module.css'\nimport HighLightedSpan from \"./HighLightedSpan\";\nimport some from \"lodash/some\"\nimport {SearchInput} from \"./SearchInput\";\nimport {Dropdown} from \"primereact/dropdown\";\n\nexport interface UsersListProps {\n  selectedClients: never[],\n  setSelectedClients: (clients: []) => void,\n\n}\n\nconst UsersList: React.FC<UsersListProps> = ({selectedClients, setSelectedClients}) => {\n\n  const [clients, setClients] = useState([]);\n  const productService = new ProductService();\n\n  const [globalFilter, setGlobalFilter] = useState('');\n\n  useEffect(() => {\n    productService.getClients().then(data => setClients(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const dt = useRef<DataTable>(null);\n\n  const citySelectItems = [\n    {label: 'User', value: 'NY'},\n    {label: 'Engagement', value: 'RM'},\n    {label: 'Project', value: 'LDN'},\n    {label: 'Legal Entity', value: 'IST'}\n  ];\n\n  const header = (\n    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n      <Dropdown  options={citySelectItems} placeholder=\"Select an Entity\"/>\n      <SearchInput\n        search={globalFilter}\n        setSearch={setGlobalFilter}\n        label=\"User search\"\n      />\n    </div>\n  );\n\n  const renderer = (data: any, props: ColumnProps) => {\n    const text: string = data?.[props.field || \"\"];\n    return <HighLightedSpan value={text} highlight={globalFilter} highlightClassName={styles.highlight}/>\n  }\n\n  const data: any[] = useMemo(() => {\n    return clients.filter(client =>\n      !some(selectedClients, {\"id\": client?.[\"id\"]})\n    )\n  }, [selectedClients, clients])\n\n  return (\n    <DataTable\n      scrollable\n      scrollHeight=\"50vh\"\n      ref={dt}\n      header={header}\n      globalFilter={globalFilter}\n      value={data}\n      selection={selectedClients}\n      onSelectionChange={e => setSelectedClients(e.value)}\n      stripedRows\n      dataKey=\"id\"\n      frozenValue={selectedClients}\n      emptyMessage={(frozen) => frozen ? \"No User Selected\" : \"No clients found\"}\n    >\n      <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}/>\n      <Column field=\"id\" header=\"id\" sortable body={renderer}/>\n      <Column field=\"name\" header=\"Name\" sortable body={renderer}/>\n    </DataTable>\n  );\n}\n\nexport default UsersList;","import React, {useState} from 'react';\nimport {Fieldset} from \"primereact/fieldset\";\nimport map from \"lodash/map\";\n\nexport interface AssignItemProps {\n  userName: string;\n  userId?: string;\n  assignments?: { type: string, id?: string, name?: string }[];\n}\n\nexport const AssignItem: React.FC<AssignItemProps> = (\n  {\n    userName = \"User Name\",\n    assignments\n  }\n) => {\n  const [collapsed, setCollapsed] = useState(false);\n\n  return (\n    <Fieldset\n      legend={userName}\n      toggleable\n      collapsed={collapsed}\n      onToggle={() => setCollapsed(!collapsed)}\n      style={{display: \"flex\", flexFlow: \"column\", alignItems: \"start\"}}\n    >\n      {map(assignments, (({type, name}) => (\n        <p key={`assignment-${name}`}>\n          {`Assigned to ${type} ${name}`}\n        </p>\n      )))\n      }\n    </Fieldset>\n  )\n}\nexport default AssignItem;\n\n","import React, {useEffect, useRef, useState} from \"react\";\nimport Tree from \"react-d3-tree\";\n\nconst debugData = [\n  {\n    name: \"Selected Users\",\n    children: [\n      {\n        name: \"Client1\",\n        children: [\n          {\n            name: \"Engagement\"\n          },\n          {\n            name: \"Project Name 2\",\n            children: [\n              {\n                name: \"id\"\n              },\n              {\n                name: \"description\"\n              },\n              {\n                name: \"slug\"\n              },\n              {\n                name: \"products\",\n                children: [\n                  {\n                    name: \"items\",\n                    children: [\n                      {\n                        name: \"id\"\n                      },\n                      {\n                        name: \"name\"\n                      }\n                    ]\n                  }\n                ]\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n];\n\nconst containerStyles = {\n  width: \"100%\",\n  height: \"20rem\"\n};\n\nconst svgSquare = {\n  shape: \"rect\",\n  shapeProps: {\n    width: 20,\n    height: 20,\n    x: -10,\n    y: -10\n  }\n};\n\nconst CenteredTree: React.FC = () => {\n\n  const treeContainerRef = useRef(null);\n  const [translate, setTranslate] = useState({x: 0, y: 0});\n\n\n  useEffect(() => {\n    // @ts-ignore\n    const dimensions = treeContainerRef.current?.getBoundingClientRect();\n    setTranslate({\n      x: dimensions.width / 10,\n      y: dimensions.width / 3\n    })\n  }, [])\n\n  return (\n    <div\n      style={containerStyles}\n      ref={treeContainerRef}\n    >\n      <Tree\n        data={debugData}\n        translate={translate}\n        orientation={\"horizontal\"}\n        // @ts-ignore\n        nodeSvgShape={svgSquare}\n        circleRadius={5}\n      />\n    </div>\n  );\n}\n\nexport default CenteredTree;\n","\nexport class NodeService {\n\n  getTreeTableNodes() {\n    return fetch('data/treetablenodes.json').then(res => res.json())\n      .then(d => d.root);\n  }\n\n  getTreeNodes() {\n    return fetch('data/treenodes.json').then(res => res.json())\n      .then(d => d.root);\n  }\n  getRolesTree() {\n    return fetch('data/rolestree.json').then(res => res.json())\n      .then(d => d.root);\n  }\n}\n    ","import React, {useEffect, useRef, useState} from 'react';\nimport {Toast} from 'primereact/toast';\nimport {NodeService} from '../service/NodeService';\nimport {Tree, TreeSelectionKeys} from \"primereact/tree\";\nimport styles from \"./AssigneeList.module.css\"\nimport {SearchInput} from \"./SearchInput\";\nimport {InputSwitch} from \"primereact/inputswitch\";\nimport {AssigneeListProps} from \"./AssignPrototypePage\";\n\n\nconst AssigneeList2: React.FC<AssigneeListProps> = ({isDataTree, setIsDataTree, setHasSelection}) => {\n  const [nodes, setNodes] = useState([]);\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n  const [selectedKeys3, setSelectedKeys3] = useState<TreeSelectionKeys>(null);\n  const toast = useRef<Toast | null>(null);\n\n  useEffect(() => {\n    setHasSelection(false);\n    new NodeService().getTreeNodes().then(data => setNodes(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onNodeSelect = (node: any) => {\n    toast.current?.show({severity: 'success', summary: 'Node Selected', detail: node?.label, life: 3000});\n  }\n\n  const onNodeUnselect = (node: any) => {\n    toast.current?.show({severity: 'success', summary: 'Node Unselected', detail: node?.label, life: 3000});\n  }\n\n  console.log(\">\", selectedKeys3);\n\n  const header = (\n    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n      <InputSwitch checked={isDataTree} onChange={() => setIsDataTree(!isDataTree)}/>\n      <SearchInput\n        search={globalFilter}\n        setSearch={setGlobalFilter}\n        label=\"Search\"\n      />\n    </div>\n  );\n  const onSelectionChange = (e: any) => {\n    setSelectedKeys3(e.value);\n    setHasSelection(!!e.value)\n  }\n\n  return (\n    <>\n      <Toast ref={toast}/>\n      <Tree\n        header={header}\n        showHeader={true}\n        className={styles.container}\n        value={nodes}\n        selectionMode=\"checkbox\"\n        selectionKeys={selectedKeys3}\n        onSelectionChange={onSelectionChange}\n        onSelect={onNodeSelect}\n        onUnselect={onNodeUnselect}\n      />\n    </>\n  )\n}\n\nexport default AssigneeList2;","import React, {useEffect, useRef, useState} from 'react';\nimport {Toast} from 'primereact/toast';\nimport {NodeService} from '../service/NodeService';\nimport {TreeTable, TreeTableEventParams, TreeTableSelectionKeys} from \"primereact/treetable\";\nimport {Column} from \"primereact/column\";\nimport {SearchInput} from \"./SearchInput\";\nimport {InputSwitch} from \"primereact/inputswitch\";\nimport {AssigneeListProps} from \"./AssignPrototypePage\";\n\n\nconst AssigneeList: React.FC<AssigneeListProps> = (\n  {\n    isDataTree,\n    setIsDataTree,\n    setHasSelection\n  }\n) => {\n  const [nodes, setNodes] = useState([]);\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n  const [selectedNodeKeys3, setSelectedNodeKeys3] = useState<TreeTableSelectionKeys>(null);\n  const toast = useRef<Toast>(null);\n  const nodeService = new NodeService();\n\n  useEffect(() => {\n    setHasSelection(false);\n    nodeService.getTreeNodes().then(data => setNodes(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onNodeSelect = (event: TreeTableEventParams) => {\n    toast.current?.show({severity: 'success', summary: 'Node Selected', detail: event?.node?.label, life: 3000});\n  }\n\n  const onNodeUnselect = (event: TreeTableEventParams) => {\n    toast.current?.show({severity: 'success', summary: 'Node Unselected', detail: event?.node?.label, life: 3000});\n  }\n\n  const header = (\n    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n      <InputSwitch checked={isDataTree} onChange={() => setIsDataTree(!isDataTree)}/>\n      <SearchInput\n        search={globalFilter}\n        setSearch={setGlobalFilter}\n        label=\"Search\"\n      />\n    </div>\n  );\n\n  const onSelectionChange = (e: any) => {\n    setSelectedNodeKeys3(e.value);\n    setHasSelection(!!e.value)\n  }\n\n  return (\n    <>\n      <Toast ref={toast}/>\n      <div className=\"card\">\n        <TreeTable\n          header={header}\n          value={nodes}\n          selectionMode=\"checkbox\"\n          selectionKeys={selectedNodeKeys3}\n          onSelectionChange={onSelectionChange}\n          onSelect={onNodeSelect}\n          onUnselect={onNodeUnselect}\n          resizableColumns columnResizeMode=\"fit\"\n        >\n          <Column field=\"name\" header=\"Name\" expander sortable style={{width:'60%'}}/>\n          <Column field=\"type\" header=\"Type\" sortable style={{width:'40%'}}/>\n        </TreeTable>\n      </div>\n    </>\n  )\n}\n\nexport default AssigneeList;","import React, {useState} from 'react';\nimport {Splitter, SplitterPanel} from \"primereact/splitter\";\nimport UsersList from \"./UsersList\";\nimport {Fieldset} from \"primereact/fieldset\";\nimport AssignItem from \"./AssignItem\";\nimport map from \"lodash/map\"\nimport isEmpty from \"lodash/isEmpty\"\nimport CenteredTree from \"./CenteredTree\";\nimport AssigneeList2 from \"./AssigneeList2\";\nimport AssigneeList from \"./AssigneeList\";\n\nexport interface AssigneeListProps {\n  isDataTree: boolean\n  setIsDataTree: (value: boolean) => void\n  setHasSelection: (value: boolean) => void\n}\n\nconst existedItems = [\n  {\n    userName: \"Donald Crabtree\", userId: \"51338-85845\", assignments: [\n      {type: \"Engagement\", id: \"101\", name: \"Super 100\"},\n      {type: \"Project\", id: \"101\", name: \" Some project namr\"},\n    ]\n  },\n  {\n    userName: \"Carl McKay\", userId: \"00818-11481\", assignments: [\n      {type: \"User\", id: \"101\", name: \"Cris Dove 42343-23421\"},\n      {type: \"Engagement\", id: \"101\", name: \"Pepsi UE\"},\n    ]\n  }\n];\n\nconst AssignPrototypePage: React.FC = () => {\n  useState()\n  const [selectedClients, setSelectedClients] = useState([]);\n  const [selectedAssignee, setSelectedAssignee] = useState(false);\n\n  const [isDataTree, setIsDataTree] = useState(true)\n\n  const [existedGroup, setExistedGroup] = useState(true);\n  const [newGroup, setNewGroup] = useState(true);\n\n\n  return (\n    <Splitter>\n      <SplitterPanel style={{height: \"80vh\"}} size={25} minSize={10}>\n        <UsersList\n          selectedClients={selectedClients}\n          setSelectedClients={(c) => setSelectedClients(c)}\n        />\n      </SplitterPanel>\n      <SplitterPanel size={40} minSize={20}>\n        {selectedAssignee && !isEmpty(selectedClients) &&\n        <Fieldset\n          legend=\"New assignment\"\n          toggleable\n          collapsed={newGroup}\n          onToggle={() => setNewGroup(!newGroup)}\n        >\n          <CenteredTree/>\n        </Fieldset>}\n        {!isEmpty(selectedClients) &&\n        <Fieldset\n          legend=\"Existed assignment\"\n          toggleable\n          collapsed={existedGroup}\n          onToggle={() => setExistedGroup(!existedGroup)}\n        >\n          {map(existedItems, (item) =>\n            <AssignItem\n              key={`assign-item-${item?.userName}`}\n              userName={item?.userName}\n              assignments={item?.assignments}\n            />\n          )}\n        </Fieldset>}\n\n      </SplitterPanel>\n      <SplitterPanel size={35} minSize={10}>\n        {isDataTree ?\n          <AssigneeList2 isDataTree={isDataTree} setIsDataTree={setIsDataTree} setHasSelection={setSelectedAssignee}/> :\n          <AssigneeList isDataTree={isDataTree} setIsDataTree={setIsDataTree} setHasSelection={setSelectedAssignee}/>}\n      </SplitterPanel>\n    </Splitter>\n  )\n}\n\nexport default AssignPrototypePage;","import React, {useState} from 'react';\nimport {Tree, TreeSelectionKeys} from \"primereact/tree\";\nimport styles from \"./AssigneeList.module.css\"\nimport {SearchInput} from \"./SearchInput\";\n\ninterface RolesTreeProps {\n  roles: never[]\n  selectedRolesKeys: TreeSelectionKeys;\n  setSelectedRolesKeys: (value: any) => void;\n}\n\nconst RolesTree: React.FC<RolesTreeProps> = ({roles, selectedRolesKeys, setSelectedRolesKeys}) => {\n\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n\n  const header = (\n    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n      <SearchInput\n        search={globalFilter}\n        setSearch={setGlobalFilter}\n        label=\"Search\"\n      />\n    </div>\n  );\n  const onSelectionChange = (e: any) => {\n    setSelectedRolesKeys(e.value)\n    console.log(\">>e\", e);\n  }\n\n  return (\n    <Tree\n      header={header}\n      showHeader={true}\n      className={styles.container}\n      value={roles}\n      selectionMode=\"checkbox\"\n      selectionKeys={selectedRolesKeys}\n      onSelectionChange={onSelectionChange}\n    />\n  )\n}\n\nexport default RolesTree;","import React, {useEffect, useState} from 'react';\nimport {Splitter, SplitterPanel} from \"primereact/splitter\";\nimport UsersList from \"./UsersList\";\nimport {Fieldset} from \"primereact/fieldset\";\nimport AssignItem from \"./AssignItem\";\nimport map from \"lodash/map\"\nimport isEmpty from \"lodash/isEmpty\"\nimport CenteredTree from \"./CenteredTree\";\nimport AssigneeList2 from \"./AssigneeList2\";\nimport AssigneeList from \"./AssigneeList\";\nimport {TreeSelectionKeys} from \"primereact/tree\";\nimport {NodeService} from \"../service/NodeService\";\nimport RolesTree from \"./RolesTree\";\n\nexport interface AssigneeListProps {\n  isDataTree: boolean\n  setIsDataTree: (value: boolean) => void\n  setHasSelection: (value: boolean) => void\n}\n\nconst existedItems = [\n  {\n    userName: \"Donald Crabtree\", userId: \"51338-85845\", assignments: [\n      {type: \"Engagement\", id: \"101\", name: \"Super 100\"},\n      {type: \"Project\", id: \"101\", name: \" Some project namr\"},\n    ]\n  },\n  {\n    userName: \"Carl McKay\", userId: \"00818-11481\", assignments: [\n      {type: \"User\", id: \"101\", name: \"Cris Dove 42343-23421\"},\n      {type: \"Engagement\", id: \"101\", name: \"Pepsi UE\"},\n    ]\n  }\n];\n\nconst AssignPrototypePage2: React.FC = () => {\n  useState()\n  const [selectedClients, setSelectedClients] = useState([]);\n  const [selectedAssignee, setSelectedAssignee] = useState(false);\n\n  const [isDataTree, setIsDataTree] = useState(true)\n\n  const [existedGroup, setExistedGroup] = useState(true);\n  const [newGroup, setNewGroup] = useState(true);\n\n  //Roles\n  const [roles, setRoles] = useState([]);\n  const [selectedRolesKeys, setSelectedRolesKeys] = useState<TreeSelectionKeys>(null);\n  const nodeService = new NodeService();\n\n  useEffect(() => {\n    nodeService.getRolesTree().then(data => setRoles(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Splitter>\n      <SplitterPanel style={{height: \"80vh\"}} size={25} minSize={10}>\n        <UsersList\n          selectedClients={selectedClients}\n          setSelectedClients={(c) => setSelectedClients(c)}\n        />\n      </SplitterPanel>\n\n      <SplitterPanel size={20} minSize={10}>\n        <RolesTree\n          roles={roles}\n          selectedRolesKeys={selectedRolesKeys}\n          setSelectedRolesKeys={setSelectedRolesKeys}\n        />\n      </SplitterPanel>\n\n      <SplitterPanel size={35} minSize={10}>\n        {isDataTree ?\n          <AssigneeList2 isDataTree={isDataTree} setIsDataTree={setIsDataTree} setHasSelection={setSelectedAssignee}/> :\n          <AssigneeList isDataTree={isDataTree} setIsDataTree={setIsDataTree} setHasSelection={setSelectedAssignee}/>}\n      </SplitterPanel>\n\n      <SplitterPanel size={20} minSize={20}>\n        <div style={{display: \"flex\", flexDirection:\"column\"}}>\n        {selectedAssignee && !isEmpty(selectedClients) &&\n        <Fieldset\n          legend=\"New assignment\"\n          toggleable\n          collapsed={newGroup}\n          onToggle={() => setNewGroup(!newGroup)}\n        >\n          <CenteredTree/>\n        </Fieldset>}\n        {!isEmpty(selectedClients) &&\n        <Fieldset\n          legend=\"Existed assignment\"\n          toggleable\n          collapsed={existedGroup}\n          onToggle={() => setExistedGroup(!existedGroup)}\n        >\n          {map(existedItems, (item) =>\n            <AssignItem\n              key={`assign-item-${item?.userName}`}\n              userName={item?.userName}\n              assignments={item?.assignments}\n            />\n          )}\n        </Fieldset>}\n        </div>\n      </SplitterPanel>\n    </Splitter>\n  )\n}\n\nexport default AssignPrototypePage2;","import React, {useState} from 'react';\nimport {OrganizationChart, OrganizationChartNodeData} from 'primereact/organizationchart';\nimport './AssignmentsOrgChart.css';\nimport {ScrollPanel} from \"primereact/scrollpanel\";\n\ninterface AssignmentsOrgChartProps {\n  data?:OrganizationChartNodeData[]\n}\n\nconst AssignmentsOrgChart: React.FC<AssignmentsOrgChartProps> = ({data}) => {\n\n  const [selection, setSelection] = useState([]);\n\n  const nodeTemplate = (node: any) => {\n    if (node.type === \"person\") {\n      return (\n        <div>\n          <div className=\"node-header\">{node.label}</div>\n          <div className=\"node-content\">\n            <div>{node.data.name}</div>\n          </div>\n        </div>\n      );\n    }\n\n    if (node.type === \"department\") {\n      return node.label;\n    }\n  }\n\n  return (\n    <div className=\"organizationchart-demo\">\n      <ScrollPanel style={{maxWidth: '50vw', width: '100%'}}>\n        <div className=\"card\">\n          <OrganizationChart\n            value={data}\n            nodeTemplate={nodeTemplate}\n            selection={selection}\n            selectionMode=\"multiple\"\n          />\n        </div>\n      </ScrollPanel>\n    </div>\n  )\n}\n\nexport default AssignmentsOrgChart;","import React, {useState} from 'react';\nimport {TreeTable, TreeTableSelectionKeys} from \"primereact/treetable\";\nimport {Column} from \"primereact/column\";\nimport {SearchInput} from \"./SearchInput\";\n\ninterface AssigneeList3Props {\n  list: never[],\n  selectedAssignees: TreeTableSelectionKeys\n  setSelectedAssignees: (value: any) => void\n}\n\nconst AssigneeList3: React.FC<AssigneeList3Props> = (\n  {\n    list,\n    selectedAssignees,\n    setSelectedAssignees\n  }\n) => {\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n\n  const header = (\n    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n      <SearchInput\n        search={globalFilter}\n        setSearch={setGlobalFilter}\n        label=\"Search\"\n      />\n    </div>\n  );\n\n  const onSelectionChange = (e: any) => {\n    setSelectedAssignees(e.value);\n  }\n\n  return (\n    <div className=\"card\">\n      <TreeTable\n        header={header}\n        value={list}\n        selectionMode=\"checkbox\"\n        selectionKeys={selectedAssignees}\n        onSelectionChange={onSelectionChange}\n        resizableColumns columnResizeMode=\"fit\"\n      >\n        <Column field=\"name\" header=\"Name\" expander sortable style={{width: '60%'}}/>\n        <Column field=\"type\" header=\"Type\" sortable style={{width: '40%'}}/>\n      </TreeTable>\n    </div>\n  )\n}\n\nexport default AssigneeList3;","import React, {useEffect, useState} from 'react';\nimport {Splitter, SplitterPanel} from \"primereact/splitter\";\nimport UsersList from \"./UsersList\";\nimport {Fieldset} from \"primereact/fieldset\";\nimport map from \"lodash/map\"\nimport isEmpty from \"lodash/isEmpty\"\nimport RolesTree from \"./RolesTree\";\nimport AssignmentsOrgChart from \"./AssignmentsOrgChart\";\nimport {TreeSelectionKeys} from \"primereact/tree\";\nimport {NodeService} from \"../service/NodeService\";\nimport {TreeTableSelectionKeys} from \"primereact/treetable\";\nimport AssigneeList3 from \"./AssigneeList3\";\nimport {OrganizationChartNodeData} from \"primereact/organizationchart\";\n\nexport interface AssigneeListProps {\n  isDataTree: boolean\n  setIsDataTree: (value: boolean) => void\n  setHasSelection: (value: boolean) => void\n}\n\nconst data1 = [{\n  label: 'Users',\n  type: 'person',\n  className: 'p-person',\n  expanded: false,\n  data: {name: 'Donald Crabtree  / Carl McKay'},\n}];\n\nconst data2 = [{\n  label: 'Users',\n  type: 'person',\n  className: 'p-person',\n  expanded: true,\n  data: {name: 'Donald Crabtree'},\n  children: [\n    {\n      label: 'Role',\n      type: 'person',\n      className: 'p-person',\n      expanded: true,\n      data: {name: 'CEM Admin'},\n    },\n    {\n      label: 'Role',\n      type: 'person',\n      className: 'p-person',\n      expanded: true,\n      data: {name: 'ETL User'},\n    },\n  ]\n}];\n\nconst data3 = [{\n  label: 'Users',\n  type: 'person',\n  className: 'p-person',\n  expanded: true,\n  data: {name: 'Donald Crabtree'},\n  children: [\n    {\n      label: 'Role',\n      type: 'person',\n      className: 'p-person',\n      expanded: true,\n      data: {name: 'CEM Admin  ETL User'},\n      children: [{\n        label: 'Client Pepsi Co',\n        className: 'department-cfo',\n        expanded: true,\n        children: [\n          {\n            label: 'Engagement Pepsi US',\n            className: 'department-cfo',\n            expanded: true,\n\n          },\n          {\n            label: 'Engagement Pepsi PL',\n            className: 'department-cfo',\n            expanded: true,\n          }\n        ]\n      }]\n    }\n  ]\n}];\n\n\nconst AssignPrototypePage3: React.FC = () => {\n\n  const [selectedUsers, setSelectedUsers] = useState([]);\n\n  //Roles\n  const [roles, setRoles] = useState([]);\n  const [selectedRolesKeys, setSelectedRolesKeys] = useState<TreeSelectionKeys>(null);\n  const nodeService = new NodeService();\n\n\n  //Assignee\n  const [assigneeList, setAssigneeList] = useState([]);\n  const [selectedAssignees, setSelectedAssignees] = useState<TreeTableSelectionKeys>(null);\n\n  useEffect(() => {\n    nodeService.getRolesTree().then(data => setRoles(data));\n    nodeService.getTreeNodes().then(data => setAssigneeList(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n\n  const userLegend = () => isEmpty(selectedUsers) ? \"Select Users\" :\n    <div>\n      {map(selectedUsers, (user) =>\n        <div>\n          {user[\"name\"] || \"unknown\"}\n        </div>\n      )}\n    </div>;\n\n  const roleLegend = () => isEmpty(selectedRolesKeys) ? \"Select Roles\" : \"CEM Admin, ETL User\";\n\n  const orgChartData: OrganizationChartNodeData[] = isEmpty(selectedUsers) ? [{expanded: false}] :\n    isEmpty(selectedRolesKeys) ? data1 :\n      isEmpty(selectedAssignees) ? data2 : data3;\n\n  return (\n    <Splitter>\n      <SplitterPanel size={60} minSize={10}>\n        <Fieldset legend={userLegend()} toggleable collapsed={false}>\n          <UsersList\n            selectedClients={selectedUsers}\n            setSelectedClients={(c) => setSelectedUsers(c)}\n          />\n        </Fieldset>\n        <Fieldset legend={roleLegend()} toggleable collapsed={true}>\n          <RolesTree\n            roles={roles}\n            selectedRolesKeys={selectedRolesKeys}\n            setSelectedRolesKeys={setSelectedRolesKeys}\n          />\n        </Fieldset>\n        <Fieldset legend=\"Business Entities\" toggleable collapsed={true}>\n          <AssigneeList3\n            list={assigneeList}\n            selectedAssignees={selectedAssignees}\n            setSelectedAssignees={setSelectedAssignees}\n          />\n        </Fieldset>\n      </SplitterPanel>\n      <SplitterPanel size={40} minSize={10}>\n        <AssignmentsOrgChart data={orgChartData}/>\n      </SplitterPanel>\n    </Splitter>\n  )\n}\n\nexport default AssignPrototypePage3;","import React, {useEffect, useMemo, useRef, useState} from 'react';\nimport {DataTable} from 'primereact/datatable';\nimport {Column, ColumnProps} from 'primereact/column';\nimport ProductService from '../service/ProductService';\nimport styles from './UsersList.module.css'\nimport HighLightedSpan from \"./HighLightedSpan\";\nimport some from \"lodash/some\"\nimport {SearchInput} from \"./SearchInput\";\nimport {Dropdown} from \"primereact/dropdown\";\n\nexport interface UsersListProps {\n  selectedClients: never[],\n  setSelectedClients: (clients: []) => void,\n\n}\n\nconst UsersList: React.FC<UsersListProps> = ({selectedClients, setSelectedClients}) => {\n\n  const [clients, setClients] = useState([]);\n  const productService = new ProductService();\n\n  const [globalFilter, setGlobalFilter] = useState('');\n\n  useEffect(() => {\n    productService.getClients().then(data => setClients(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const dt = useRef<DataTable>(null);\n\n  const [selectedUser, setSelectedUser] = useState<any>(null);\n\n  const header = (\n    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n\n      <SearchInput\n        search={globalFilter}\n        setSearch={setGlobalFilter}\n        label=\"User search\"\n      />\n      <div style={{width: \"1rem\"}}/>\n      <Dropdown\n        value={selectedUser}\n        options={clients}\n        onChange={(e: { value: any }) => {\n          setSelectedUser(e.value);\n        }}\n\n        optionLabel=\"name\"\n        filter showClear filterBy=\"name\"\n        placeholder=\"Select a Client\"\n      />\n    </div>\n  );\n\n  const renderer = (data: any, props: ColumnProps) => {\n    const text: string = data?.[props.field || \"\"];\n    return <HighLightedSpan value={text} highlight={globalFilter} highlightClassName={styles.highlight}/>\n  }\n\n  const data: any[] = useMemo(() => {\n    return clients.filter(client =>\n      !some(selectedClients, {\"id\": client?.[\"id\"]})\n    )\n  }, [selectedClients, clients])\n\n  return (\n    <DataTable\n      scrollable\n      scrollHeight=\"60vh\"\n      ref={dt}\n      header={header}\n      globalFilter={globalFilter}\n      value={selectedUser && data}\n      selection={selectedClients}\n      onSelectionChange={e => setSelectedClients(e.value)}\n      stripedRows\n      dataKey=\"id\"\n      frozenValue={selectedClients}\n      emptyMessage={(frozen) => frozen ? \"No User Selected\" : \"No clients found\"}\n    >\n      <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}/>\n      <Column field=\"id\" header=\"id\" sortable body={renderer}/>\n      <Column field=\"name\" header=\"Name\" sortable body={renderer}/>\n    </DataTable>\n  );\n}\n\nexport default UsersList;","import React, {useState} from 'react';\nimport {Column} from \"primereact/column\";\nimport {SearchInput} from \"./SearchInput\";\nimport {DataTable} from \"primereact/datatable\";\nimport {Dropdown} from \"primereact/dropdown\";\n\nconst businessEntitiesItems = [\n  {label: 'Client', value: 'Client'},\n  {label: 'Engagement', value: 'Engagement'},\n  {label: 'Project', value: 'Project'},\n];\n\nconst clientsList = [\n  {\n    \"name\": \"Pepsi Co - 51338-85845\",\n    \"type\": \"Client\"\n  },\n  {\n    \"name\": \"Microsoft 00818-11481\",\n    \"type\": \"Client\"\n  },\n  {\n    \"name\": \"GM - 51228-11225\",\n    \"type\": \"Client\"\n  }\n\n]\n\nconst engagementsList = [\n  {\n    \"name\": \"Super Name 1\",\n    \"type\": \"Engagement\"\n  },\n  {\n    \"name\": \"Pepsi Poland\",\n    \"type\": \"Engagement\"\n  }, {\n    \"name\": \"X-BOX\",\n    \"type\": \"Engagement\"\n  },\n  {\n    \"name\": \"Office\",\n    \"type\": \"Engagement\"\n  },\n  {\n    \"name\": \"Azure\",\n    \"type\": \"Engagement\"\n  },\n  {\n    \"name\": \"GM A 2019\",\n    \"type\": \"Engagement\"\n  },\n  {\n    \"name\": \"GM RND India 2020\",\n    \"type\": \"Engagement\"\n  }\n\n\n];\n\nconst projectsList = [\n  {\n    \"name\": \"Project1\",\n    \"type\": \"Project\"\n  },\n  {\n    \"name\": \"Project2\",\n    \"type\": \"Project\"\n  },\n  {\n    \"name\": \"Invoices.txt\",\n    \"type\": \"Project\"\n  },\n  {\n    \"name\": \"Project1\",\n    \"type\": \"Project\"\n  },\n  {\n    \"name\": \"Project2\",\n    \"type\": \"Project\"\n  },\n  {\n    \"name\": \"Project1\",\n    \"type\": \"Project\"\n  },\n  {\n    \"name\": \"Project2\",\n    \"type\": \"Project\"\n  },\n  {\n    \"name\": \"Project1\",\n    \"type\": \"Project\"\n  },\n  {\n    \"name\": \"Project2\",\n    \"type\": \"Project\"\n  }\n];\n\nconst AssigneeList4: React.FC = () => {\n\n  const [globalFilter, setGlobalFilter] = useState(\"\");\n  const [selectedType, setSelectedType] = useState(\"\");\n  const [selectedObjects, setSelectedObjects] = useState([]);\n\n  console.log(\">\", selectedObjects);\n\n  const data = selectedType === \"Client\" ? clientsList\n    : selectedType === \"Engagement\" ? engagementsList : selectedType === \"Project\" ? projectsList : [];\n\n  const header = (\n    <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\n      <SearchInput\n        search={globalFilter}\n        setSearch={setGlobalFilter}\n        label=\"Search\"\n      />\n      <div style={{width: \"1rem\"}}/>\n      <Dropdown\n        options={businessEntitiesItems}\n        placeholder=\"Select an Entity\"\n        onChange={(e) => setSelectedType(e.value)}\n      />\n    </div>\n  );\n\n  return (\n    <div className=\"card\" style={{minHeight: \"50vh\"}}>\n      <DataTable\n        header={header}\n        selectionMode=\"checkbox\"\n        selection={selectedObjects}\n        // selectionKeys={selectedAssignees}\n        // onSelectionChange={onSelectionChange}\n        onSelectionChange={e => setSelectedObjects(e.value)}\n        resizableColumns columnResizeMode=\"fit\"\n        value={data}\n        frozenValue={selectedObjects}\n      >\n        <Column selectionMode=\"multiple\" headerStyle={{width: '3em'}}/>\n        <Column field=\"name\" header=\"Name\" sortable style={{width: '60%'}}/>\n      </DataTable>\n    </div>\n  )\n}\n\nexport default AssigneeList4;","import React, {useEffect, useState} from 'react';\nimport {Splitter, SplitterPanel} from \"primereact/splitter\";\nimport {Fieldset} from \"primereact/fieldset\";\nimport AssignItem from \"./AssignItem\";\nimport map from \"lodash/map\"\nimport isEmpty from \"lodash/isEmpty\"\nimport CenteredTree from \"./CenteredTree\";\nimport {TreeSelectionKeys} from \"primereact/tree\";\nimport {NodeService} from \"../service/NodeService\";\nimport RolesTree from \"./RolesTree\";\nimport UsersList4 from \"./UsersList4\";\nimport AssigneeList4 from \"./AssigneeList4\";\n\nconst existedItems = [\n  {\n    userName: \"Donald Crabtree\", userId: \"51338-85845\", assignments: [\n      {type: \"Engagement\", id: \"101\", name: \"Super 100\"},\n      {type: \"Project\", id: \"101\", name: \" Some project namr\"},\n    ]\n  },\n  {\n    userName: \"Carl McKay\", userId: \"00818-11481\", assignments: [\n      {type: \"User\", id: \"101\", name: \"Cris Dove 42343-23421\"},\n      {type: \"Engagement\", id: \"101\", name: \"Pepsi UE\"},\n    ]\n  }\n];\n\nconst AssignPrototypePage4: React.FC = () => {\n  useState()\n  const [selectedClients, setSelectedClients] = useState([]);\n  const [selectedAssignee, setSelectedAssignee] = useState(false);\n\n  const [existedGroup, setExistedGroup] = useState(true);\n  const [newGroup, setNewGroup] = useState(true);\n\n  //Roles\n  const [roles, setRoles] = useState([]);\n  const [selectedRolesKeys, setSelectedRolesKeys] = useState<TreeSelectionKeys>(null);\n  const nodeService = new NodeService();\n\n  useEffect(() => {\n    nodeService.getRolesTree().then(data => setRoles(data));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <Splitter style={{height:\"100%\"}} >\n      <SplitterPanel size={25} minSize={10}>\n        <UsersList4\n          selectedClients={selectedClients}\n          setSelectedClients={(c) => setSelectedClients(c)}\n        />\n      </SplitterPanel>\n\n      <SplitterPanel size={20} minSize={10}>\n        <RolesTree\n          roles={roles}\n          selectedRolesKeys={selectedRolesKeys}\n          setSelectedRolesKeys={setSelectedRolesKeys}\n        />\n      </SplitterPanel>\n\n      <SplitterPanel size={35} minSize={10}>\n          <AssigneeList4 />\n      </SplitterPanel>\n\n      <SplitterPanel size={20} minSize={20}>\n        <div style={{display: \"flex\", flexDirection:\"column\"}}>\n          {selectedAssignee && !isEmpty(selectedClients) &&\n          <Fieldset\n            legend=\"New assignment\"\n            toggleable\n            collapsed={newGroup}\n            onToggle={() => setNewGroup(!newGroup)}\n          >\n            <CenteredTree/>\n          </Fieldset>}\n          {!isEmpty(selectedClients) &&\n          <Fieldset\n            legend=\"Existed assignment\"\n            toggleable\n            collapsed={existedGroup}\n            onToggle={() => setExistedGroup(!existedGroup)}\n          >\n            {map(existedItems, (item) =>\n              <AssignItem\n                key={`assign-item-${item?.userName}`}\n                userName={item?.userName}\n                assignments={item?.assignments}\n              />\n            )}\n          </Fieldset>}\n        </div>\n      </SplitterPanel>\n    </Splitter>\n  )\n}\n\nexport default AssignPrototypePage4;","import React from 'react';\nimport {BreadCrumb} from 'primereact/breadcrumb';\nimport {NavLink, Route, Switch} from 'react-router-dom'\nimport './App.css';\nimport 'primeicons/primeicons.css';\nimport 'primereact/resources/themes/mdc-light-indigo/theme.css';\nimport 'primereact/resources/primereact.css';\nimport 'primeflex/primeflex.css';\nimport {Toolbar} from \"primereact/toolbar\";\nimport AssignPrototypePage from \"./app/assign-prototype/AssignPrototypePage\";\nimport AssignPrototypePage2 from \"./app/assign-prototype/AssignPrototypePage2\";\nimport AssignPrototypePage3 from \"./app/assign-prototype/AssignPrototypePage3\";\nimport AssignPrototypePage4 from \"./app/assign-prototype/AssignPrototypePage4\";\n\nconst items = [\n  {label: 'CEM'},\n  {label: 'Users'},\n  {label: 'List'},\n  {label: 'Assignments'},\n];\n\nconst home = {icon: 'pi pi-home', url: 'https://www.primefaces.org/primereact'}\n\nfunction App() {\n\n  const breadcrumbs = <BreadCrumb model={items} home={home}/>\n\n  return (\n    <div className=\"App\">\n      <Toolbar left={breadcrumbs}/>\n      <Switch>\n        <Route path=\"/\" exact={true}>\n          <div className=\"flex flex-column\">\n            <NavLink className=\"p-1\" to={\"/1\"}> Demo 1 </NavLink>\n            <NavLink className=\"p-1\" to={\"/2\"}> Demo 2 </NavLink>\n            <NavLink className=\"p-1\" to={\"/3\"}> Demo 3 </NavLink>\n            <NavLink className=\"p-1\" to={\"/4\"}> Demo 4 </NavLink>\n          </div>\n        </Route>\n        <Route path=\"/1\" exact={true}>\n          <AssignPrototypePage/>\n        </Route>\n        <Route path=\"/2\" exact={true}>\n          <AssignPrototypePage2/>\n        </Route>\n        <Route path=\"/3\" exact={true}>\n          <AssignPrototypePage3/>\n        </Route>\n        <Route path=\"/4\" exact={true}>\n          <AssignPrototypePage4/>\n        </Route>\n\n      </Switch>\n      {/*<AssignPrototypePage/>*/}\n    </div>\n  );\n}\n\nexport default App;","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\n\nexport const store = configureStore({\n  reducer: {\n    counter: () => null,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {store} from './app/store';\nimport {Provider} from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App/>\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataTableHeader\":\"UsersList_dataTableHeader__5Sl2p\",\"highlight\":\"UsersList_highlight__2A3JP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AssigneeList_container__3LwAp\"};"],"sourceRoot":""}